dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)

dnl ================================================================
dnl Source code release status
dnl ================================================================
m4_define([%PKG_NAME_LC_NORMALIZED%_release_status], [git])


dnl ================================================================
dnl Required versions for dependencies
dnl ================================================================
m4_define([glib_req_version],           [2.26.0])
m4_define([gi_req_version],             [0.9.5])
m4_define([gtk_doc_req_version],        [1.13])


AC_INIT(%PKG_NAME%, [%INITIAL_VERSION%])
AC_CONFIG_SRCDIR(src/%PROGRAM_NAME_LC%.c)
AC_CONFIG_AUX_DIR([build])
AC_CONFIG_MACRO_DIR([build/autotools])
AC_CONFIG_HEADERS(config.h)

# Save this value here, since automake will set cflags later and we
# want to know if the user specified custom cflags or not.
cflags_set=${CFLAGS+set}

AM_INIT_AUTOMAKE([1.11 foreign -Wno-portability no-define no-dist-gzip
                  dist-bzip2])
AM_SILENT_RULES([yes])


dnl ================================================================
dnl See what platform we are building for
dnl ================================================================
AC_CANONICAL_HOST
AC_MSG_CHECKING([if building for some Win32 platform])
AS_CASE([$host],
        [*-*-mingw*|*-*-cygwin*],
        [
          %PKG_NAME_UC_NORMALIZED%_EXTRA_LDFLAGS="$%PKG_NAME_UC_NORMALIZED%_EXTRA_LDFLAGS -no-undefined"
          platform_win32=yes
        ],

        [platform_win32=no]
)
AC_MSG_RESULT([$platform_win32])
AM_CONDITIONAL(OS_WIN32, [test "$platform_win32" = "yes"])


dnl ================================================================
dnl Handle extra configure options
dnl ================================================================

m4_define([default], [m4_if(%PKG_NAME_LC_NORMALIZED%_release_status, [git], [yes], [no])])
AC_ARG_ENABLE(
  [debug],
  [AC_HELP_STRING([--enable-debug=@<:@no/yes@:>@], [Control debugging level @<:@default=]default[@:>@])],
  [],
  enable_debug=default
)
AS_CASE(
  [$enable_debug],
  [yes],
  [
    test "$cflags_set" = set || CFLAGS="$CFLAGS -g -O0"
    %PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS="$%PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS -D%PKG_NAME_UC_NORMALIZED%_ENABLE_DEBUG"
  ],
  [no],
  [
    %PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS="$%PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS -D%PKG_NAME_UC_NORMALIZED%_ENABLE_DEBUG -DG_DISABLE_CHECKS -DG_DISABLE_CAST_CHECKS"
  ],
  [AC_MSG_ERROR([Unknown argument for --enable-debug])]
)

# use strict compiler flags only when building from git; the rules for
# distcheck will take care of turning this on when making a release
m4_define([default], [m4_if(%PKG_NAME_LC_NORMALIZED%_release_status, [git], [yes], [no])])
AC_ARG_ENABLE(
  [maintainer-flags],
  [AC_HELP_STRING([--enable-maintainer-flags=@<:@no/yes/error@:>@], [Use strict compiler flags @<:@default=]default[@:>@])],
  [],
  enable_maintainer_flags=default
)

MAINTAINER_COMPILER_FLAGS="-Wall -Wcast-align -Wuninitialized
                           -Wno-strict-aliasing -Wempty-body -Wformat
                           -Wformat-security -Winit-self
                           -Wdeclaration-after-statement -Wvla
                           -Wpointer-arith"

AS_CASE(
  [$enable_maintainer_flags],
  [yes],
  [
    AS_COMPILER_FLAGS([MAINTAINER_CFLAGS], [$MAINTAINER_COMPILER_FLAGS])
  ],
  [no],
  [
  ],
  [error],
  [
    MAINTAINER_COMPILER_FLAGS="$MAINTAINER_COMPILER_FLAGS -Werror"
    AS_COMPILER_FLAGS([MAINTAINER_CFLAGS], [$MAINTAINER_COMPILER_FLAGS])
  ],
  [*],
  [AC_MSG_ERROR([Invalid option for --enable-maintainer-flags])]
)

# strip leading spaces
%PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS="$%PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS ${MAINTAINER_CFLAGS/#  }"

AC_ARG_ENABLE(uninstalled-build,
              AC_HELP_STRING([--enable-uninstalled-build],
			     [Search for files in build directory as well]),
	      enable_uninstalled=yes,)
if test x"$enable_uninstalled" = xyes; then
	AC_DEFINE_UNQUOTED(
        SHARE_UNINSTALLED_DIR,"`pwd`/%PKG_NAME%/data",[path to source data dir])
fi


dnl ================================================================
dnl Compiler stuff.
dnl ================================================================
AC_PROG_CC
AC_PROG_CPP
AM_PROG_CC_C_O
AC_ISC_POSIX
AC_C_CONST


dnl ================================================================
dnl Libtool stuff.
dnl ================================================================
dnl AC_PROG_LIBTOOL
dnl LIBTOOL="$LIBTOOL --preserve-dup-deps"


dnl ================================================================
dnl I18n stuff.
dnl ================================================================
AM_GNU_GETTEXT_VERSION([0.17])
AM_GNU_GETTEXT([external])

GETTEXT_PACKAGE="%PKG_NAME_LC_NORMALIZED%"
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,
                   "$GETTEXT_PACKAGE",
                   [The prefix for our gettext translation domains.])
AS_ALL_LINGUAS


dnl ================================================================
dnl Documentation stuff.
dnl ================================================================
# gtkdocize greps for ^GTK_DOC_CHECK and parses it, so you need to have
# it on it's own line.
m4_ifdef([GTK_DOC_CHECK], [
GTK_DOC_CHECK([gtk_doc_req_version], [--flavour no-tmpl])
])
AM_CONDITIONAL([BUILD_GTK_DOC], [test "x$enable_gtk_doc" = "xyes"])


dnl ================================================================
dnl Check for dependency packages.
dnl ================================================================

dnl     ============================================================
dnl     Check glib dependencies
dnl     ============================================================
AM_PATH_GLIB_2_0([glib_req_version],
                 [have_glib=yes], [have_glib=no],
                 [gobject gthread gmodule-no-export])
AS_IF([test "x$have_glib" = "xno"], AC_MSG_ERROR([glib-2.0 is required]))

%PKG_NAME_UC_NORMALIZED%_PKG_REQUIRES="$%PKG_NAME_UC_NORMALIZED%_PKG_REQUIRES glib-2.0"
AC_SUBST(%PKG_NAME_UC_NORMALIZED%_PKG_REQUIRES)
PKG_CHECK_MODULES(%PKG_NAME_UC_NORMALIZED%_DEP, [$%PKG_NAME_UC_NORMALIZED%_PKG_REQUIRES])


dnl ================================================================
dnl Misc program dependencies.
dnl ================================================================
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PROG_INSTALL


dnl ================================================================
dnl GObject-Introspection check
dnl ================================================================
GOBJECT_INTROSPECTION_CHECK([gi_req_version])


dnl ================================================================
dnl Checks for header files.
dnl ================================================================
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h signal.h)


dnl ================================================================
dnl Checks for library functions.
dnl ================================================================
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(putenv strdup)


dnl ================================================================
dnl What needs to be substituted in other files
dnl ================================================================
AC_SUBST(%PKG_NAME_UC_NORMALIZED%_EXTRA_CPPFLAGS)
AC_SUBST(%PKG_NAME_UC_NORMALIZED%_EXTRA_CFLAGS)
AC_SUBST(%PKG_NAME_UC_NORMALIZED%_EXTRA_LDFLAGS)
AC_SUBST(%PKG_NAME_UC_NORMALIZED%_DEP_CFLAGS)
AC_SUBST(%PKG_NAME_UC_NORMALIZED%_DEP_LIBS)


dnl ================================================================
dnl Dah Da!
dnl ================================================================
AC_OUTPUT(
Makefile 
%PKG_NAME%/Makefile
po/Makefile.in
)
